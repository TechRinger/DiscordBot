## Job to build docker image
name: CI

on:
  push:
    branches:
      - main
  pull_request:


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-sha-tag:
    name: Generate SHA Tag
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      sha-tag: ${{ steps.sha-tag.outputs.sha-tag }}
    steps:
      - name: Discord notification - Start
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "Discord Bot was updated"
          description: "Build process has started"
          url: "https://github.com/TechRinger/DiscordBot"
          noprefix: true
      - name: Create SHA Container tag
        id: sha-tag
        run: |
          tag=$(cut -c 1-7 <<< $GITHUB_SHA)
          echo "sha-tag=$tag" >> $GITHUB_OUTPUT

  build:
    name: Build Container Image
    runs-on: ubuntu-latest
    needs: generate-sha-tag
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_REPO }}

      - name: Run DockerFile
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          cache-from: type=registry,ref=ghcr.io/techringer/discordbot:latest
          cache-to: type=inline
          tags: |
            ghcr.io/techringer/discordbot:latest
            ghcr.io/techringer/discordbot:${{ needs.generate-sha-tag.outputs.sha-tag }}
          build-args: |
            git_sha=${{ github.sha }}
            DISCORD_BOT_TOKEN=put_discord_token_here
            DISCORD_GUILD=put_guild_here 
            SOAR_TYPE=put_soar_type_here
            SOAR_API_KEY=put_soar_api_key_here
            SOAR_URL=put_soar_url_here
            OPENAI_API_TOKEN=put_openai_api_here
            POETRY_VERSION=1.4.1
  push:
    name: Refresh Kubernetes Image
    runs-on: ubuntu-latest
    needs: build
    if: ${{ success() }}
    steps:
      - name: Create Kubeconfig
        run: |
          mkdir ~/.kube
          echo ${{ secrets.KUBE_CONFIG}} | base64 --decode > ~/.kube/config
      - name: Recreate container
        run: |
          kubectl delete pods -n bots $(kubectl get pods -n bots | egrep "discord" | cut -d ' ' -f1)

  notify-build-complete:
    name: Image Build Complete
    runs-on: ubuntu-latest
    needs: build
    if: ${{ success() }}
    steps:
    - name: Discord notification - Start
      uses: sarisia/actions-status-discord@v1
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        status: ${{ job.status }}
        title: "The DiscordBot project successfully pushed the image"
        description: "Build process has completed sucessfully."
        url: "https://github.com/TechRinger/DiscordBot"
  
  notify-build-failure:
    name: Image Build Failed
    runs-on: ubuntu-latest
    needs: build
    if: ${{ failure() }}
    steps:
    - name: Discord notification - Start
      uses: sarisia/actions-status-discord@v1
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        status: 'Failure'
        title: "The DiscordBot project failed build."
        description: "Build process failed build process."
        url: "https://github.com/TechRinger/DiscordBot"       

  notify-push-complete:
    name: K8s Image Update Complete
    runs-on: ubuntu-latest
    needs: push
    if: ${{ success() }}
    steps:
    - name: Discord notification - Start
      uses: sarisia/actions-status-discord@v1
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        status: ${{ job.status }}
        title: "K8s Pod Refresh"
        description: "The DiscordBot project refreshed the K8s pod."
        url: "https://github.com/TechRinger/DiscordBot"
  
  notify-push-failure:
    name: K8s Image Update Failed
    runs-on: ubuntu-latest
    needs: push
    if: ${{ failure() }}
    steps:
    - name: Discord notification - Start
      uses: sarisia/actions-status-discord@v1
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        status: 'Failure'
        title: "K8s Pod Refresh"
        description: "The DiscordBot project failed to refresh K8s pod."
        url: "https://github.com/TechRinger/DiscordBot"