## Job to build docker image
name: CI

on:
  push:
    branches:
      - main
  pull_request:


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-sha-tag:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      sha-tag: ${{ steps.sha-tag.outputs.sha-tag }}
    steps:
      - name: Discord notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          uses: Ilshidur/action-discord@master
        with:
          args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} has started a new build.'      
      - name: Create SHA Container tag
        id: sha-tag
        run: |
          tag=$(cut -c 1-7 <<< $GITHUB_SHA)
          echo "sha-tag=$tag" >> $GITHUB_OUTPUT

#   build-deploy:
#     if: github.ref == 'refs/heads/main'
#     uses: ./.github/workflows/build-push.yml
#     needs:
#       - generate-sha-tag
#     with:
#       sha-tag: ${{ needs.generate-sha-tag.outputs.sha-tag }}
#     secrets: inherit

  build:
    name: Build & Push
    runs-on: ubuntu-latest
    needs: generate-sha-tag

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # The current version (v2) of Docker's build-push action uses
      # buildx, which comes with BuildKit features that help us speed
      # up our builds using additional cache features. Buildx also
      # has a lot of other features that are not as relevant to us.
      #
      # See https://github.com/docker/build-push-action

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_REPO }}
          

      # Build and push the container to the GitHub Container
      # Repository. The container will be tagged as "latest"
      # and with the short SHA of the commit.

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          cache-from: type=registry,ref=ghcr.io/techringer/discordbot:latest
          cache-to: type=inline
          tags: |
            ghcr.io/techringer/discordbot:latest
            ghcr.io/techringer/discordbot:${{ needs.generate-sha-tag.outputs.sha-tag }}
          build-args: |
            git_sha=${{ github.sha }}
            DISCORD_BOT_TOKEN=put_discord_token_here
            DISCORD_GUILD=put_guild_here 
            OPENAI_API_TOKEN=put_openai_api_here
            POETRY_VERSION=1.4.1
      - name: Create Kubeconfig
        run: |
            mkdir ~/.kube
            echo ${{ secrets.KUBE_CONFIG}} | base64 --decode > ~/.kube/config
      - name: Recreate container
        run: |
            kubectl delete pods -n bots $(kubectl get pods -n bots | egrep "discord" | cut -d ' ' -f1)

  notify-complete:
    name: Image Push Complete
    runs-on: ubuntu-latest
    needs: build
    steps:

    - name: Discord notification
      uses: Ilshidur/action-discord@master
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
      with:
        args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} successfully pushed the image.'
     
